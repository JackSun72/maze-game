sourceCompatibility = 1.8
[compileJava, compileTestJava]*.options*.encoding = 'UTF-8' //needed?
sourceSets.main.java.srcDirs = [ "src/" ]
sourceSets.main.resources.srcDirs = ["../assets"]

project.ext.mainClassName = "console.Main"
project.ext.assetsDir = new File("../assets")

import org.gradle.internal.os.OperatingSystem

task run(dependsOn: classes, type: JavaExec) {
    main = project.mainClassName
    classpath = sourceSets.main.runtimeClasspath
    standardInput = System.in
    workingDir = project.assetsDir
    ignoreExitValue = true

    if (OperatingSystem.current() == OperatingSystem.MAC_OS) {
        // Required to run on macOS
        jvmArgs += "-XstartOnFirstThread"
    }
}

task debug(dependsOn: classes, type: JavaExec) {
    main = project.mainClassName
    classpath = sourceSets.main.runtimeClasspath
    standardInput = System.in
    workingDir = project.assetsDir
    ignoreExitValue = true
    debug = true
}

task dist(type: Jar) {
    duplicatesStrategy(DuplicatesStrategy.EXCLUDE)
    manifest {
        attributes 'Main-Class': project.mainClassName
    }
    dependsOn configurations.runtimeClasspath
    from {
        configurations.runtimeClasspath.collect { it.isDirectory() ? it : zipTree(it) }
    }
    with jar
}

dependencies {
    implementation 'junit:junit:4.13.2'
    implementation 'org.assertj:assertj-core:3.23.1'
    implementation 'org.scala-lang:scala-library:2.13.8'
    implementation 'org.jetbrains.kotlin:kotlin-stdlib-common:1.7.0'
    implementation 'org.slf4j:slf4j-log4j12:1.7.36'
    implementation 'org.scala-lang:scala-reflect:2.13.8'
    implementation 'org.apache.commons:commons-lang3:3.12.0'
    implementation 'org.osgi:org.osgi.core:6.0.0'
    implementation 'com.novocode:junit-interface:0.11'
    implementation 'org.springframework.boot:spring-boot-starter-test:2.7.2'
    implementation 'org.slf4j:slf4j-api:1.7.36'
    implementation 'org.hamcrest:hamcrest-core:2.2'
}


dist.dependsOn classes

eclipse.project.name = appName + "-core"
